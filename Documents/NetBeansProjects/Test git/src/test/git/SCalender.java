/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package test.git;

/**
 *
 * @author Mashuk
 */
public class SCalender extends javax.swing.JFrame {

    /**
     * Creates new form SCalender
     */
    public SCalender() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scLeftPane = new javax.swing.JPanel();
        scMainPane = new javax.swing.JPanel();
        scCalenderPane = new javax.swing.JPanel();
        sCalenderCellOne = new javax.swing.JPanel();
        sCalenderCellTwo = new javax.swing.JPanel();
        sCalenderCellThree = new javax.swing.JPanel();
        sCalenderCellFour = new javax.swing.JPanel();
        sCalenderCellFive = new javax.swing.JPanel();
        sCalenderCellSix = new javax.swing.JPanel();
        sCalenderCellSeven = new javax.swing.JPanel();
        sCalenderCellEight = new javax.swing.JPanel();
        sCalenderCellNine = new javax.swing.JPanel();
        sCalenderCellTen = new javax.swing.JPanel();
        sCalenderCellEleven = new javax.swing.JPanel();
        sCalenderCellTwelve = new javax.swing.JPanel();
        sCalenderCellThirteen = new javax.swing.JPanel();
        sCalenderCellFourteen = new javax.swing.JPanel();
        sCalenderCellFifteen = new javax.swing.JPanel();
        sCalenderCellSixteen = new javax.swing.JPanel();
        sCalenderCellSeventeen = new javax.swing.JPanel();
        sCalenderCellEighteen = new javax.swing.JPanel();
        sCalenderCellNineteen = new javax.swing.JPanel();
        sCalenderCellTwenty = new javax.swing.JPanel();
        sCalenderCellTwentyOne = new javax.swing.JPanel();
        sCalenderCellTwentyTwo = new javax.swing.JPanel();
        sCalenderCellTwentyThree = new javax.swing.JPanel();
        sCalenderCellTwentyFour = new javax.swing.JPanel();
        sCalenderCellTwentyFive = new javax.swing.JPanel();
        sCalenderCellTwentySix = new javax.swing.JPanel();
        sCalenderCellTwentySeven = new javax.swing.JPanel();
        sCalenderCellTwentyEight = new javax.swing.JPanel();
        sCalenderCellTwentyNine = new javax.swing.JPanel();
        sCalenderCellThirty = new javax.swing.JPanel();
        sCalenderCellThirtyOne = new javax.swing.JPanel();
        sCalenderCellThirtyTwo = new javax.swing.JPanel();
        sCalenderCellThirtyThree = new javax.swing.JPanel();
        sCalenderCellThirtyFour = new javax.swing.JPanel();
        sCalenderCellThirtyFive = new javax.swing.JPanel();
        sCalenderCellThirtySix = new javax.swing.JPanel();
        sCalenderCellThirtySeven = new javax.swing.JPanel();
        sCalenderCellThirtyEight = new javax.swing.JPanel();
        sCalenderCellThirtyNine = new javax.swing.JPanel();
        sCalenderCellFourty = new javax.swing.JPanel();
        sCalenderCellFourtyOne = new javax.swing.JPanel();
        sCalenderCellFourtyTwo = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout scLeftPaneLayout = new javax.swing.GroupLayout(scLeftPane);
        scLeftPane.setLayout(scLeftPaneLayout);
        scLeftPaneLayout.setHorizontalGroup(
            scLeftPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        scLeftPaneLayout.setVerticalGroup(
            scLeftPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 732, Short.MAX_VALUE)
        );

        getContentPane().add(scLeftPane, java.awt.BorderLayout.LINE_START);

        scMainPane.setLayout(new java.awt.BorderLayout());

        scCalenderPane.setLayout(new java.awt.GridLayout(6, 7));

        sCalenderCellOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellOneLayout = new javax.swing.GroupLayout(sCalenderCellOne);
        sCalenderCellOne.setLayout(sCalenderCellOneLayout);
        sCalenderCellOneLayout.setHorizontalGroup(
            sCalenderCellOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellOneLayout.setVerticalGroup(
            sCalenderCellOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellOne);

        sCalenderCellTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwoLayout = new javax.swing.GroupLayout(sCalenderCellTwo);
        sCalenderCellTwo.setLayout(sCalenderCellTwoLayout);
        sCalenderCellTwoLayout.setHorizontalGroup(
            sCalenderCellTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwoLayout.setVerticalGroup(
            sCalenderCellTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwo);

        sCalenderCellThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThreeLayout = new javax.swing.GroupLayout(sCalenderCellThree);
        sCalenderCellThree.setLayout(sCalenderCellThreeLayout);
        sCalenderCellThreeLayout.setHorizontalGroup(
            sCalenderCellThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThreeLayout.setVerticalGroup(
            sCalenderCellThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThree);

        sCalenderCellFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellFourLayout = new javax.swing.GroupLayout(sCalenderCellFour);
        sCalenderCellFour.setLayout(sCalenderCellFourLayout);
        sCalenderCellFourLayout.setHorizontalGroup(
            sCalenderCellFourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellFourLayout.setVerticalGroup(
            sCalenderCellFourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellFour);

        sCalenderCellFive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellFiveLayout = new javax.swing.GroupLayout(sCalenderCellFive);
        sCalenderCellFive.setLayout(sCalenderCellFiveLayout);
        sCalenderCellFiveLayout.setHorizontalGroup(
            sCalenderCellFiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellFiveLayout.setVerticalGroup(
            sCalenderCellFiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellFive);

        sCalenderCellSix.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellSixLayout = new javax.swing.GroupLayout(sCalenderCellSix);
        sCalenderCellSix.setLayout(sCalenderCellSixLayout);
        sCalenderCellSixLayout.setHorizontalGroup(
            sCalenderCellSixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellSixLayout.setVerticalGroup(
            sCalenderCellSixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellSix);

        sCalenderCellSeven.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellSevenLayout = new javax.swing.GroupLayout(sCalenderCellSeven);
        sCalenderCellSeven.setLayout(sCalenderCellSevenLayout);
        sCalenderCellSevenLayout.setHorizontalGroup(
            sCalenderCellSevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellSevenLayout.setVerticalGroup(
            sCalenderCellSevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellSeven);

        sCalenderCellEight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellEightLayout = new javax.swing.GroupLayout(sCalenderCellEight);
        sCalenderCellEight.setLayout(sCalenderCellEightLayout);
        sCalenderCellEightLayout.setHorizontalGroup(
            sCalenderCellEightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellEightLayout.setVerticalGroup(
            sCalenderCellEightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellEight);

        sCalenderCellNine.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellNineLayout = new javax.swing.GroupLayout(sCalenderCellNine);
        sCalenderCellNine.setLayout(sCalenderCellNineLayout);
        sCalenderCellNineLayout.setHorizontalGroup(
            sCalenderCellNineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellNineLayout.setVerticalGroup(
            sCalenderCellNineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellNine);

        sCalenderCellTen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTenLayout = new javax.swing.GroupLayout(sCalenderCellTen);
        sCalenderCellTen.setLayout(sCalenderCellTenLayout);
        sCalenderCellTenLayout.setHorizontalGroup(
            sCalenderCellTenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTenLayout.setVerticalGroup(
            sCalenderCellTenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTen);

        sCalenderCellEleven.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellElevenLayout = new javax.swing.GroupLayout(sCalenderCellEleven);
        sCalenderCellEleven.setLayout(sCalenderCellElevenLayout);
        sCalenderCellElevenLayout.setHorizontalGroup(
            sCalenderCellElevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellElevenLayout.setVerticalGroup(
            sCalenderCellElevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellEleven);

        sCalenderCellTwelve.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwelveLayout = new javax.swing.GroupLayout(sCalenderCellTwelve);
        sCalenderCellTwelve.setLayout(sCalenderCellTwelveLayout);
        sCalenderCellTwelveLayout.setHorizontalGroup(
            sCalenderCellTwelveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwelveLayout.setVerticalGroup(
            sCalenderCellTwelveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwelve);

        sCalenderCellThirteen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirteenLayout = new javax.swing.GroupLayout(sCalenderCellThirteen);
        sCalenderCellThirteen.setLayout(sCalenderCellThirteenLayout);
        sCalenderCellThirteenLayout.setHorizontalGroup(
            sCalenderCellThirteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirteenLayout.setVerticalGroup(
            sCalenderCellThirteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirteen);

        sCalenderCellFourteen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellFourteenLayout = new javax.swing.GroupLayout(sCalenderCellFourteen);
        sCalenderCellFourteen.setLayout(sCalenderCellFourteenLayout);
        sCalenderCellFourteenLayout.setHorizontalGroup(
            sCalenderCellFourteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellFourteenLayout.setVerticalGroup(
            sCalenderCellFourteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellFourteen);

        sCalenderCellFifteen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellFifteenLayout = new javax.swing.GroupLayout(sCalenderCellFifteen);
        sCalenderCellFifteen.setLayout(sCalenderCellFifteenLayout);
        sCalenderCellFifteenLayout.setHorizontalGroup(
            sCalenderCellFifteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellFifteenLayout.setVerticalGroup(
            sCalenderCellFifteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellFifteen);

        sCalenderCellSixteen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellSixteenLayout = new javax.swing.GroupLayout(sCalenderCellSixteen);
        sCalenderCellSixteen.setLayout(sCalenderCellSixteenLayout);
        sCalenderCellSixteenLayout.setHorizontalGroup(
            sCalenderCellSixteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellSixteenLayout.setVerticalGroup(
            sCalenderCellSixteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellSixteen);

        sCalenderCellSeventeen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellSeventeenLayout = new javax.swing.GroupLayout(sCalenderCellSeventeen);
        sCalenderCellSeventeen.setLayout(sCalenderCellSeventeenLayout);
        sCalenderCellSeventeenLayout.setHorizontalGroup(
            sCalenderCellSeventeenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellSeventeenLayout.setVerticalGroup(
            sCalenderCellSeventeenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellSeventeen);

        sCalenderCellEighteen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellEighteenLayout = new javax.swing.GroupLayout(sCalenderCellEighteen);
        sCalenderCellEighteen.setLayout(sCalenderCellEighteenLayout);
        sCalenderCellEighteenLayout.setHorizontalGroup(
            sCalenderCellEighteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellEighteenLayout.setVerticalGroup(
            sCalenderCellEighteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellEighteen);

        sCalenderCellNineteen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellNineteenLayout = new javax.swing.GroupLayout(sCalenderCellNineteen);
        sCalenderCellNineteen.setLayout(sCalenderCellNineteenLayout);
        sCalenderCellNineteenLayout.setHorizontalGroup(
            sCalenderCellNineteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellNineteenLayout.setVerticalGroup(
            sCalenderCellNineteenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellNineteen);

        sCalenderCellTwenty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyLayout = new javax.swing.GroupLayout(sCalenderCellTwenty);
        sCalenderCellTwenty.setLayout(sCalenderCellTwentyLayout);
        sCalenderCellTwentyLayout.setHorizontalGroup(
            sCalenderCellTwentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyLayout.setVerticalGroup(
            sCalenderCellTwentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwenty);

        sCalenderCellTwentyOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyOneLayout = new javax.swing.GroupLayout(sCalenderCellTwentyOne);
        sCalenderCellTwentyOne.setLayout(sCalenderCellTwentyOneLayout);
        sCalenderCellTwentyOneLayout.setHorizontalGroup(
            sCalenderCellTwentyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyOneLayout.setVerticalGroup(
            sCalenderCellTwentyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentyOne);

        sCalenderCellTwentyTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyTwoLayout = new javax.swing.GroupLayout(sCalenderCellTwentyTwo);
        sCalenderCellTwentyTwo.setLayout(sCalenderCellTwentyTwoLayout);
        sCalenderCellTwentyTwoLayout.setHorizontalGroup(
            sCalenderCellTwentyTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyTwoLayout.setVerticalGroup(
            sCalenderCellTwentyTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentyTwo);

        sCalenderCellTwentyThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyThreeLayout = new javax.swing.GroupLayout(sCalenderCellTwentyThree);
        sCalenderCellTwentyThree.setLayout(sCalenderCellTwentyThreeLayout);
        sCalenderCellTwentyThreeLayout.setHorizontalGroup(
            sCalenderCellTwentyThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyThreeLayout.setVerticalGroup(
            sCalenderCellTwentyThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentyThree);

        sCalenderCellTwentyFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyFourLayout = new javax.swing.GroupLayout(sCalenderCellTwentyFour);
        sCalenderCellTwentyFour.setLayout(sCalenderCellTwentyFourLayout);
        sCalenderCellTwentyFourLayout.setHorizontalGroup(
            sCalenderCellTwentyFourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyFourLayout.setVerticalGroup(
            sCalenderCellTwentyFourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentyFour);

        sCalenderCellTwentyFive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyFiveLayout = new javax.swing.GroupLayout(sCalenderCellTwentyFive);
        sCalenderCellTwentyFive.setLayout(sCalenderCellTwentyFiveLayout);
        sCalenderCellTwentyFiveLayout.setHorizontalGroup(
            sCalenderCellTwentyFiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyFiveLayout.setVerticalGroup(
            sCalenderCellTwentyFiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentyFive);

        sCalenderCellTwentySix.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentySixLayout = new javax.swing.GroupLayout(sCalenderCellTwentySix);
        sCalenderCellTwentySix.setLayout(sCalenderCellTwentySixLayout);
        sCalenderCellTwentySixLayout.setHorizontalGroup(
            sCalenderCellTwentySixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentySixLayout.setVerticalGroup(
            sCalenderCellTwentySixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentySix);

        sCalenderCellTwentySeven.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentySevenLayout = new javax.swing.GroupLayout(sCalenderCellTwentySeven);
        sCalenderCellTwentySeven.setLayout(sCalenderCellTwentySevenLayout);
        sCalenderCellTwentySevenLayout.setHorizontalGroup(
            sCalenderCellTwentySevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentySevenLayout.setVerticalGroup(
            sCalenderCellTwentySevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentySeven);

        sCalenderCellTwentyEight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyEightLayout = new javax.swing.GroupLayout(sCalenderCellTwentyEight);
        sCalenderCellTwentyEight.setLayout(sCalenderCellTwentyEightLayout);
        sCalenderCellTwentyEightLayout.setHorizontalGroup(
            sCalenderCellTwentyEightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyEightLayout.setVerticalGroup(
            sCalenderCellTwentyEightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentyEight);

        sCalenderCellTwentyNine.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellTwentyNineLayout = new javax.swing.GroupLayout(sCalenderCellTwentyNine);
        sCalenderCellTwentyNine.setLayout(sCalenderCellTwentyNineLayout);
        sCalenderCellTwentyNineLayout.setHorizontalGroup(
            sCalenderCellTwentyNineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellTwentyNineLayout.setVerticalGroup(
            sCalenderCellTwentyNineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellTwentyNine);

        sCalenderCellThirty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyLayout = new javax.swing.GroupLayout(sCalenderCellThirty);
        sCalenderCellThirty.setLayout(sCalenderCellThirtyLayout);
        sCalenderCellThirtyLayout.setHorizontalGroup(
            sCalenderCellThirtyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyLayout.setVerticalGroup(
            sCalenderCellThirtyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirty);

        sCalenderCellThirtyOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyOneLayout = new javax.swing.GroupLayout(sCalenderCellThirtyOne);
        sCalenderCellThirtyOne.setLayout(sCalenderCellThirtyOneLayout);
        sCalenderCellThirtyOneLayout.setHorizontalGroup(
            sCalenderCellThirtyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyOneLayout.setVerticalGroup(
            sCalenderCellThirtyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtyOne);

        sCalenderCellThirtyTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyTwoLayout = new javax.swing.GroupLayout(sCalenderCellThirtyTwo);
        sCalenderCellThirtyTwo.setLayout(sCalenderCellThirtyTwoLayout);
        sCalenderCellThirtyTwoLayout.setHorizontalGroup(
            sCalenderCellThirtyTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyTwoLayout.setVerticalGroup(
            sCalenderCellThirtyTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtyTwo);

        sCalenderCellThirtyThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyThreeLayout = new javax.swing.GroupLayout(sCalenderCellThirtyThree);
        sCalenderCellThirtyThree.setLayout(sCalenderCellThirtyThreeLayout);
        sCalenderCellThirtyThreeLayout.setHorizontalGroup(
            sCalenderCellThirtyThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyThreeLayout.setVerticalGroup(
            sCalenderCellThirtyThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtyThree);

        sCalenderCellThirtyFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyFourLayout = new javax.swing.GroupLayout(sCalenderCellThirtyFour);
        sCalenderCellThirtyFour.setLayout(sCalenderCellThirtyFourLayout);
        sCalenderCellThirtyFourLayout.setHorizontalGroup(
            sCalenderCellThirtyFourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyFourLayout.setVerticalGroup(
            sCalenderCellThirtyFourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtyFour);

        sCalenderCellThirtyFive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyFiveLayout = new javax.swing.GroupLayout(sCalenderCellThirtyFive);
        sCalenderCellThirtyFive.setLayout(sCalenderCellThirtyFiveLayout);
        sCalenderCellThirtyFiveLayout.setHorizontalGroup(
            sCalenderCellThirtyFiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyFiveLayout.setVerticalGroup(
            sCalenderCellThirtyFiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtyFive);

        sCalenderCellThirtySix.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtySixLayout = new javax.swing.GroupLayout(sCalenderCellThirtySix);
        sCalenderCellThirtySix.setLayout(sCalenderCellThirtySixLayout);
        sCalenderCellThirtySixLayout.setHorizontalGroup(
            sCalenderCellThirtySixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtySixLayout.setVerticalGroup(
            sCalenderCellThirtySixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtySix);

        sCalenderCellThirtySeven.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtySevenLayout = new javax.swing.GroupLayout(sCalenderCellThirtySeven);
        sCalenderCellThirtySeven.setLayout(sCalenderCellThirtySevenLayout);
        sCalenderCellThirtySevenLayout.setHorizontalGroup(
            sCalenderCellThirtySevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtySevenLayout.setVerticalGroup(
            sCalenderCellThirtySevenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtySeven);

        sCalenderCellThirtyEight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyEightLayout = new javax.swing.GroupLayout(sCalenderCellThirtyEight);
        sCalenderCellThirtyEight.setLayout(sCalenderCellThirtyEightLayout);
        sCalenderCellThirtyEightLayout.setHorizontalGroup(
            sCalenderCellThirtyEightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyEightLayout.setVerticalGroup(
            sCalenderCellThirtyEightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtyEight);

        sCalenderCellThirtyNine.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellThirtyNineLayout = new javax.swing.GroupLayout(sCalenderCellThirtyNine);
        sCalenderCellThirtyNine.setLayout(sCalenderCellThirtyNineLayout);
        sCalenderCellThirtyNineLayout.setHorizontalGroup(
            sCalenderCellThirtyNineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellThirtyNineLayout.setVerticalGroup(
            sCalenderCellThirtyNineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellThirtyNine);

        sCalenderCellFourty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellFourtyLayout = new javax.swing.GroupLayout(sCalenderCellFourty);
        sCalenderCellFourty.setLayout(sCalenderCellFourtyLayout);
        sCalenderCellFourtyLayout.setHorizontalGroup(
            sCalenderCellFourtyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellFourtyLayout.setVerticalGroup(
            sCalenderCellFourtyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellFourty);

        sCalenderCellFourtyOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellFourtyOneLayout = new javax.swing.GroupLayout(sCalenderCellFourtyOne);
        sCalenderCellFourtyOne.setLayout(sCalenderCellFourtyOneLayout);
        sCalenderCellFourtyOneLayout.setHorizontalGroup(
            sCalenderCellFourtyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellFourtyOneLayout.setVerticalGroup(
            sCalenderCellFourtyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellFourtyOne);

        sCalenderCellFourtyTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sCalenderCellFourtyTwoLayout = new javax.swing.GroupLayout(sCalenderCellFourtyTwo);
        sCalenderCellFourtyTwo.setLayout(sCalenderCellFourtyTwoLayout);
        sCalenderCellFourtyTwoLayout.setHorizontalGroup(
            sCalenderCellFourtyTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        sCalenderCellFourtyTwoLayout.setVerticalGroup(
            sCalenderCellFourtyTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        scCalenderPane.add(sCalenderCellFourtyTwo);

        scMainPane.add(scCalenderPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(scMainPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SCalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SCalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SCalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SCalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SCalender().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel sCalenderCellEight;
    private javax.swing.JPanel sCalenderCellEighteen;
    private javax.swing.JPanel sCalenderCellEleven;
    private javax.swing.JPanel sCalenderCellFifteen;
    private javax.swing.JPanel sCalenderCellFive;
    private javax.swing.JPanel sCalenderCellFour;
    private javax.swing.JPanel sCalenderCellFourteen;
    private javax.swing.JPanel sCalenderCellFourty;
    private javax.swing.JPanel sCalenderCellFourtyOne;
    private javax.swing.JPanel sCalenderCellFourtyTwo;
    private javax.swing.JPanel sCalenderCellNine;
    private javax.swing.JPanel sCalenderCellNineteen;
    private javax.swing.JPanel sCalenderCellOne;
    private javax.swing.JPanel sCalenderCellSeven;
    private javax.swing.JPanel sCalenderCellSeventeen;
    private javax.swing.JPanel sCalenderCellSix;
    private javax.swing.JPanel sCalenderCellSixteen;
    private javax.swing.JPanel sCalenderCellTen;
    private javax.swing.JPanel sCalenderCellThirteen;
    private javax.swing.JPanel sCalenderCellThirty;
    private javax.swing.JPanel sCalenderCellThirtyEight;
    private javax.swing.JPanel sCalenderCellThirtyFive;
    private javax.swing.JPanel sCalenderCellThirtyFour;
    private javax.swing.JPanel sCalenderCellThirtyNine;
    private javax.swing.JPanel sCalenderCellThirtyOne;
    private javax.swing.JPanel sCalenderCellThirtySeven;
    private javax.swing.JPanel sCalenderCellThirtySix;
    private javax.swing.JPanel sCalenderCellThirtyThree;
    private javax.swing.JPanel sCalenderCellThirtyTwo;
    private javax.swing.JPanel sCalenderCellThree;
    private javax.swing.JPanel sCalenderCellTwelve;
    private javax.swing.JPanel sCalenderCellTwenty;
    private javax.swing.JPanel sCalenderCellTwentyEight;
    private javax.swing.JPanel sCalenderCellTwentyFive;
    private javax.swing.JPanel sCalenderCellTwentyFour;
    private javax.swing.JPanel sCalenderCellTwentyNine;
    private javax.swing.JPanel sCalenderCellTwentyOne;
    private javax.swing.JPanel sCalenderCellTwentySeven;
    private javax.swing.JPanel sCalenderCellTwentySix;
    private javax.swing.JPanel sCalenderCellTwentyThree;
    private javax.swing.JPanel sCalenderCellTwentyTwo;
    private javax.swing.JPanel sCalenderCellTwo;
    private javax.swing.JPanel scCalenderPane;
    private javax.swing.JPanel scLeftPane;
    private javax.swing.JPanel scMainPane;
    // End of variables declaration//GEN-END:variables
}
